/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Rezultat;
import domen.Takmicenje;
import domen.Utakmica;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import konstante.Operacije;
import modeli.ModelTabeleObrisiTakmicenje;
import modeli.ModelTabeleUtakmicaZaUpisivanjeRezultata;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Windows HD
 */
public class formaRezultati extends javax.swing.JPanel {

    /**
     * Creates new form formaRezultati
     */
    public formaRezultati() {
        initComponents();
        srediTabelu();
        srediTabeluUtakmica();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRezultati = new javax.swing.JPanel();
        labelaRez = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaUtakmica = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnUcitajUtakmice = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTakmicenja = new javax.swing.JTable();

        panelRezultati.setBorder(javax.swing.BorderFactory.createTitledBorder("Rezultati"));

        labelaRez.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        labelaRez.setText("Rezultati za takmičenje");

        tabelaUtakmica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelaUtakmica);

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkaži");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRezultatiLayout = new javax.swing.GroupLayout(panelRezultati);
        panelRezultati.setLayout(panelRezultatiLayout);
        panelRezultatiLayout.setHorizontalGroup(
            panelRezultatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelaRez, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
            .addGroup(panelRezultatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelRezultatiLayout.createSequentialGroup()
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        panelRezultatiLayout.setVerticalGroup(
            panelRezultatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRezultatiLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelaRez)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelRezultatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnOtkazi))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Odaberite željeno takmičenje:");

        btnUcitajUtakmice.setText("Učitaj utakmice");
        btnUcitajUtakmice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUcitajUtakmiceActionPerformed(evt);
            }
        });

        tabelaTakmicenja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaTakmicenja);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(btnUcitajUtakmice, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnUcitajUtakmice)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRezultati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelRezultati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUcitajUtakmiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUcitajUtakmiceActionPerformed
        ModelTabeleObrisiTakmicenje model = (ModelTabeleObrisiTakmicenje) tabelaTakmicenja.getModel();
        int red = tabelaTakmicenja.getSelectedRow();
        ArrayList<Utakmica> utakmicee = new ArrayList<>();
        if (red >= 0) {
            Takmicenje tak = model.vratiElement(red);

            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.VRATI_UTAKMICE);
            komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);

            ServerskiOdgovor so = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
            ArrayList<Utakmica> utakmice = (ArrayList<Utakmica>) so.getOdgovor();
            int brojac = 0;

            for (Utakmica ut : utakmice) {
                if (ut.getTakmicenje().getTakmicenjeID() == tak.getTakmicenjeID() && ut.getRezultat().getGoloviDomacin() == -1) {
                    brojac++;
                    utakmicee.add(ut);
                }
            }

            if (brojac == 0) {
                JOptionPane.showMessageDialog(this, "Sve utakmice za ovo takmičenje imaju upisane rezultate.", "", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            ModelTabeleUtakmicaZaUpisivanjeRezultata m = (ModelTabeleUtakmicaZaUpisivanjeRezultata) tabelaUtakmica.getModel();

            for (Utakmica u : utakmicee) {
                if (u.getTakmicenje().getTakmicenjeID() == tak.getTakmicenjeID()) {
                    for (Utakmica u1 : m.getLista()) {
                        if (u1.getDomacin().equals(u.getDomacin()) && u1.getGost().equals(u.getGost())
                                && u1.getTakmicenje().getTakmicenjeID() == u.getTakmicenje().getTakmicenjeID()) {
                            JOptionPane.showMessageDialog(this, "Utakmice takmičenja " + u.getTakmicenje().getNaziv() + " se već nalaze u tabeli", "", JOptionPane.INFORMATION_MESSAGE);
                            return;
                        }
                    }
                    m.dodajUtakmicu(u);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati takmičenje", "", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnUcitajUtakmiceActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleUtakmicaZaUpisivanjeRezultata model = (ModelTabeleUtakmicaZaUpisivanjeRezultata) tabelaUtakmica.getModel();
        ArrayList<Utakmica> utakmicee = model.getLista();
        KlijentskiZahtev kz1 = new KlijentskiZahtev();
        ServerskiOdgovor so1 = new ServerskiOdgovor();

        for (Utakmica ut : utakmicee) {
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.VRATI_UTAKMICE);
            komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);

            ServerskiOdgovor so = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
            ArrayList<Utakmica> utakmice = (ArrayList<Utakmica>) so.getOdgovor();

            for (Utakmica u : utakmice) {
                if (ut.getUtakmicaID() == u.getUtakmicaID()) {
                    Rezultat rez = new Rezultat();
                    rez.setDomacin(ut.getDomacin());
                    rez.setGost(ut.getGost());
                    rez.setGoloviDomacin(ut.getRezultat().getGoloviDomacin());
                    rez.setGoloviGost(ut.getRezultat().getGoloviGost());
                    rez.setTakmicenje(ut.getTakmicenje());

                    kz1 = new KlijentskiZahtev();
                    kz1.setOperacija(Operacije.SACUVAJ_REZULTAT);
                    kz1.setParametar(rez);
                    komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz1);

                    so1 = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
                    int id = (int) so1.getOdgovor();

                    Rezultat rezul = new Rezultat();
                    rezul.setRezultatID(id);
                    ut.setRezultat(rezul);
                    
                    Object[] niz = new Object[]{ut, id};

                    KlijentskiZahtev kz2 = new KlijentskiZahtev();
                    kz2.setOperacija(Operacije.UPISI_REZ_ID_U_UTAKMICU);
                    kz2.setParametar(niz);
                    komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz2);

                    ServerskiOdgovor so2 = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();

                }
            }
        }
        model.obrisi();
        JOptionPane.showMessageDialog(this, "Uspešno sačuvani rezultati");
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Cofirm if you want to exit", "",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnOtkaziActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnUcitajUtakmice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelaRez;
    private javax.swing.JPanel panelRezultati;
    private javax.swing.JTable tabelaTakmicenja;
    private javax.swing.JTable tabelaUtakmica;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
        modeli.ModelTabeleObrisiTakmicenje model = new ModelTabeleObrisiTakmicenje();
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_TAKMICENJA);
        komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);

        ServerskiOdgovor so = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<Takmicenje> takmicenja = (ArrayList<Takmicenje>) so.getOdgovor();

        for (Takmicenje tak : takmicenja) {
            model.dodajUListu(tak);
        }

        tabelaTakmicenja.setModel(model);
    }

    private void srediTabeluUtakmica() {
        ModelTabeleUtakmicaZaUpisivanjeRezultata model = new ModelTabeleUtakmicaZaUpisivanjeRezultata();
        tabelaUtakmica.setModel(model);
    }
}
