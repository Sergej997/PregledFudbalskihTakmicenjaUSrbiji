/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Rezultat;
import domen.Takmicenje;
import domen.Utakmica;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import konstante.Operacije;
import modeli.ModelTabeleObrisiTakmicenje;
import modeli.ModelTabeleUtakmica;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Windows HD
 */
public class formaObrisiUtakmice extends javax.swing.JDialog {

    /**
     * Creates new form formaObrisiUtakmice
     */
    public formaObrisiUtakmice(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPretrazi = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUtakmica = new javax.swing.JTable();
        btnPrikaziSve = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        btnPretrazi.setText("Pretraži");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        tabelaUtakmica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaUtakmica);

        btnPrikaziSve.setText("Prikazi sve");
        btnPrikaziSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziSveActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPretrazi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPrikaziSve, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretrazi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrikaziSve)
                    .addComponent(btnObrisi))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        ModelTabeleUtakmica model = (ModelTabeleUtakmica) tabelaUtakmica.getModel();
        String filter = txtPretrazi.getText();

        ArrayList<Utakmica> lista = model.getLista();
        ArrayList<Utakmica> filtrirani = new ArrayList<>();

        for (Utakmica utakmica : lista) {
            if (utakmica.getDomacin().toLowerCase().contains(filter.toLowerCase())
                    || utakmica.getGost().toLowerCase().contains(filter.toLowerCase())) {
                filtrirani.add(utakmica);
            }
        }

        model.obrisiListu();

        for (Utakmica u : filtrirani) {
            model.dodajUListu(u);
        }

        tabelaUtakmica.setModel(model);
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnPrikaziSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziSveActionPerformed
        ModelTabeleUtakmica model = new ModelTabeleUtakmica();
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_UTAKMICE);
        komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);

        ServerskiOdgovor so = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<Utakmica> utakmice = (ArrayList<Utakmica>) so.getOdgovor();

        for (Utakmica u : utakmice) {
            model.dodajUListu(u);
        }
        tabelaUtakmica.setModel(model);
        txtPretrazi.setText("");
    }//GEN-LAST:event_btnPrikaziSveActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleUtakmica model = (ModelTabeleUtakmica) tabelaUtakmica.getModel();
        int red = tabelaUtakmica.getSelectedRow();
        if (red >= 0) {
            Utakmica utakmica = model.vratiElement(red);
            KlijentskiZahtev kz2 = new KlijentskiZahtev();
            kz2.setOperacija(Operacije.VRATI_REZULTATE);
            komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz2);

            ServerskiOdgovor so2 = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
            ArrayList<Rezultat> vraceniRez = (ArrayList<Rezultat>) so2.getOdgovor();
            
            for (Rezultat vraceniRez1 : vraceniRez) {
                if(vraceniRez1.getGost().equals(utakmica.getGost()) && vraceniRez1.getDomacin().equals(utakmica.getDomacin())
                        && vraceniRez1.getTakmicenje().getTakmicenjeID() == utakmica.getTakmicenje().getTakmicenjeID()) {
                    utakmica.setRezultat(vraceniRez1);
                }
            }
            
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.OBRISI_UTAKMICE);
            kz.setParametar(utakmica);
            komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);

            ServerskiOdgovor so = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
            JOptionPane.showMessageDialog(this, "Uspesno obrisana utakmica");

            for (Rezultat rez : vraceniRez) {
                if (rez.getRezultatID() == utakmica.getRezultat().getRezultatID()) {
                    KlijentskiZahtev kz3 = new KlijentskiZahtev();
                    kz3.setOperacija(Operacije.OBRISI_REZULTAT);
                    kz3.setParametar(rez.getRezultatID());
                    komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz3);

                    ServerskiOdgovor so3 = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati utakmicu za brisanje", "", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formaObrisiUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formaObrisiUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formaObrisiUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formaObrisiUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                formaObrisiUtakmice dialog = new formaObrisiUtakmice(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnPrikaziSve;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaUtakmica;
    private javax.swing.JTextField txtPretrazi;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
        ModelTabeleUtakmica model = new ModelTabeleUtakmica();
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_UTAKMICE);
        komunikacija.KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);

        ServerskiOdgovor so = komunikacija.KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<Utakmica> vraceneUtakmice = (ArrayList<Utakmica>) so.getOdgovor();

        for (Utakmica ut : vraceneUtakmice) {
            model.dodajUtakmicu(ut);
        }

        tabelaUtakmica.setModel(model);
    }
}
